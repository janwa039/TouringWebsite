.popup {
    height: 100vh;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background-color:rgba($color-black, .8);
    z-index: 9999;
    opacity:0;
    visibility: hidden;
    transition: all .3s;
    overflow: hidden;
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);

    //ask the browser if it supports certain property
    @supports (-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px)) {
        -webkit-backdrop-filter: blur(10px);
        backdrop-filter: blur(10px);
        background-color:rgba($color-black, .3);
    }

    &__close {
        &:link,
        &:visited {
            color: $color-grey-dark;
            position: absolute;
            top:2.5rem;
            right: 2.5rem;
            font-size: 3rem;
            text-decoration: none;
            display: inline-block;
            transition: all .2s;
            line-height: 1;

        }

        &:hover {
            color: $color-primary;
        }

    }

    &__content {
        @include absCenter;
        width:75%;
        box-shadow: 0 2rem 4rem rgba($color-black, .2);
        background-color: $color-white;
        border-radius: 3px;
        display: table;
        overflow: hidden; // this is due to the fact the edge of the image is overlapping the border radius of the div(content)
        transform: translate(-50%, -50%) scale(.5); // repeated it here due to the the fact we cxan only have one transform 
        // since the mixin have one trsnsform, then we need to have it here again
        transition: all .5s .2s; //2s for the delay to allow the black backround show before the pop up

        @include respond (tab-land) {
            display: block;
            height: auto;
        }

 
    }

    &__left {
        width: 33.333333333%;
        display: table-cell;


        @include respond (tab-land) {
            display: block;
            width: 0;
            opacity: 0;

        }


    }

    &__right {
        width: 66.666666667%;
        display: table-cell; // donsent matter left or right because the bpoth occupy 100% of there parents. we did the
        //table cell due to the fact float for the right which contains the cell dont occupy thesame heigh like the left for the
        //images. then set the parent element to table. with this we can use vertical align: middle for tables
        vertical-align: middle;
        padding:3rem 3rem;



        @include respond (tab-land) {
            display: block;
            padding:3rem 5rem;
            width: 100%;
            
        }


    }

    &__img {
        display: block;
        width: 100%;


        
    }

    &__text {  
        font-size: 1.3rem;
        margin-bottom: 2rem;  

        -moz-column-count: 2;
        -moz-column-gap: 1rem;
        -moz-column-rule: 2px solid $color-grey-light-2;
        
        column-count: 2;
        column-gap: 1rem;
        column-rule: 1px solid $color-grey-light-2;
        -moz-hyphens: auto;
        -ms-hyphens:auto;
        -webkit-hyphens: auto;
        hyphens:auto;


        @include respond (phone) {
            -moz-column-count: 0;
            -moz-column-gap: 0;
            -moz-column-rule: 0;
            column-count: 0;
            column-gap: 0;
            column-rule: 0;

        }



    }

        //OPEN STATES
        &:target {
            opacity:1;
            visibility: visible;
        }
    
        &:target &__content {
            transform: translate(-50%, -50%) scale(1)
        }
}

